name: Publish spec and build Docker image
on:
  push:
    branches:
      - main
jobs:
  publish_spec:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout spec
        uses: actions/checkout@v2

      - name: Validate spec
        uses: mpetrunic/swagger-cli-action@v1.0.0
        with:
          command: "validate api/UserServer.yaml"

      - name: Build spec
        uses: mpetrunic/swagger-cli-action@v1.0.0
        with:
          command: "bundle -o UserServer.json -t json api/UserServer.yaml"

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: YAML to HTML
        run: |
          npm install -g bootprint
          npm install -g bootprint-openapi
          bootprint openapi UserServer.json specs


      - name: Deploy on Github Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          folder: specs
          branch: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.EDSON_GITHUB_TOKEN }}

  build:
    needs: publish_spec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.EDSON_DOCKERHUB_ID }}
          password: ${{ secrets.EDSON_DOCKERHUB_TOKEN }}

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v1

      - name: Configurar buildx
        uses: docker/setup-buildx-action@v1

      - name: Obtener servion del servicio
        uses: SebRollen/toml-action@v1.0.0
        id: pVersion
        with:
          file: 'goproject.toml'
          field: 'version'

      - name: Obtener nombre de la imagen de Docker
        uses: SebRollen/toml-action@v1.0.0
        id: pImageName
        with:
          file: 'goproject.toml'
          field: "imageName"

      - name: Construir imagen
        env:
          tag: ${{ steps.pVersion.outputs.value }}
          image_name: ${{ steps.pImageName.outputs.value }}
        run: |
          image="w3edd/$image_name"
          tag=$image:$tag
          docker buildx build \
          --push \
          --tag $tag \
          --platform linux/386,linux/amd64 .